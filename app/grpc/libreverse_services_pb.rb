# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: libreverse.proto for package 'Libreverse.Grpc'

require "grpc"
require_relative "libreverse_pb"

module Libreverse
  module Grpc
    module LibreverseService
      # The Libreverse gRPC service
      class Service
        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = "libreverse.LibreverseService"

        # Experience management
        rpc :GetAllExperiences, ::Libreverse::Grpc::GetAllExperiencesRequest, ::Libreverse::Grpc::ExperiencesResponse
        rpc :GetExperience, ::Libreverse::Grpc::GetExperienceRequest, ::Libreverse::Grpc::ExperienceResponse
        rpc :CreateExperience, ::Libreverse::Grpc::CreateExperienceRequest, ::Libreverse::Grpc::ExperienceResponse
        rpc :UpdateExperience, ::Libreverse::Grpc::UpdateExperienceRequest, ::Libreverse::Grpc::ExperienceResponse
        rpc :DeleteExperience, ::Libreverse::Grpc::DeleteExperienceRequest, ::Libreverse::Grpc::DeleteResponse
        rpc :ApproveExperience, ::Libreverse::Grpc::ApproveExperienceRequest, ::Libreverse::Grpc::ExperienceResponse
        rpc :GetPendingExperiences, ::Libreverse::Grpc::GetPendingExperiencesRequest, ::Libreverse::Grpc::ExperiencesResponse
        # User preferences
        rpc :GetPreference, ::Libreverse::Grpc::GetPreferenceRequest, ::Libreverse::Grpc::PreferenceResponse
        rpc :SetPreference, ::Libreverse::Grpc::SetPreferenceRequest, ::Libreverse::Grpc::PreferenceResponse
        rpc :DismissPreference, ::Libreverse::Grpc::DismissPreferenceRequest, ::Libreverse::Grpc::PreferenceResponse
        # Admin endpoints
        rpc :AdminApproveExperience, ::Libreverse::Grpc::AdminApproveExperienceRequest, ::Libreverse::Grpc::ExperienceResponse
      end

      Stub = Service.rpc_stub_class
    end
  end
end
