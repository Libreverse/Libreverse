// Glass Effect Mixins and Base Styles
// ===================================
// Reusable mixins for applying glass effects to any component

// Base glass appearance mixin
@mixin glass-base($background: rgba(255, 255, 255, 0.1), $border: rgba(255, 255, 255, 0.2), $blur: 10px) {
  background: $background;
  backdrop-filter: blur($blur);
  border: 1px solid $border;
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
}

// Glass button mixin
@mixin glass-button($size: 40px, $border-radius: 20px) {
  @include glass-base();
  width: $size;
  height: $size;
  min-width: $size;
  min-height: $size;
  max-width: $size;
  max-height: $size;
  border-radius: $border-radius;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.1s ease, opacity 300ms ease-out;
  flex-shrink: 0;
  position: relative;
  cursor: pointer;
  
  &:active:not(.disabled) {
    transform: scale(0.97);
  }
}

// Glass container mixin
@mixin glass-container($border-radius: 20px, $padding: 16px) {
  @include glass-base();
  border-radius: $border-radius;
  padding: $padding;
  display: flex;
  flex-direction: column;
  position: relative;
  overflow: hidden;
}

// Glass card mixin
@mixin glass-card($border-radius: 15px, $padding: 20px) {
  @include glass-base(rgba(255, 255, 255, 0.08), rgba(255, 255, 255, 0.15));
  border-radius: $border-radius;
  padding: $padding;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 35px 60px rgba(0, 0, 0, 0.3);
  }
}

// Glass navigation mixin
@mixin glass-nav($direction: row, $gap: 8px) {
  @include glass-container();
  flex-direction: $direction;
  gap: $gap;
  align-items: center;
  
  @if $direction == column {
    justify-content: space-between;
  } @else {
    justify-content: center;
  }
}

// Glass sidebar mixin
@mixin glass-sidebar($width: 60px, $corner-rounding: right) {
  @include glass-container();
  width: $width;
  position: fixed;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  z-index: 5;
  height: 80vh;
  
  @if $corner-rounding == right {
    border-radius: 0 20px 20px 0;
  } @else if $corner-rounding == left {
    border-radius: 20px 0 0 20px;
  }
}

// Glass drawer mixin
@mixin glass-drawer($width: 350px, $height: 60px, $expanded-height: 600px, $corner-rounding: top) {
  @include glass-base(rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.2), 15px);
  position: fixed;
  right: 0;
  bottom: 0;
  width: $width;
  height: $height;
  z-index: 3;
  transition: height 0.3s ease, background 0.3s ease, backdrop-filter 0.3s ease;
  overflow: hidden;
  
  @if $corner-rounding == top {
    border-radius: 20px 20px 0 0;
  } @else if $corner-rounding == bottom {
    border-radius: 0 0 20px 20px;
  } @else if $corner-rounding == all {
    border-radius: 20px;
  }
  
  &.expanded {
    height: $expanded-height;
  }
  
  .drawer-header {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(5px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
  }
  
  .drawer-contents {
    background: rgba(255, 255, 255, 0.02);
    backdrop-filter: blur(5px);
    transition: all 0.3s ease;
    height: 0;
    overflow: hidden;
    
    &.expanded {
      height: calc(#{$expanded-height} - #{$height});
    }
  }
  
  .drawer-toggle {
    @include glass-button(60px, 10px);
    background: rgba(255, 255, 255, 0.1);
    
    &:hover {
      background: rgba(255, 255, 255, 0.15);
    }
  }
  
  @media screen and (width <= 450px) {
    right: auto;
    left: 50%;
    transform: translateX(-50%);
    width: 90%;
    max-width: $width;
  }
}

// Native content styling to match glass during loading
@mixin native-glass-button($size: 40px, $border-radius: 20px) {
  @include glass-button($size, $border-radius);
  text-decoration: none;
  
  img, svg {
    width: 24px;
    height: 24px;
    display: block;
    flex-shrink: 0;
  }
}

// Disabled state mixin
@mixin glass-disabled() {
  opacity: 0.6;
  cursor: default !important;
  filter: grayscale(0.5);
  
  &.shake {
    animation: glass-shake 0.75s ease-in-out infinite;
    will-change: transform;
  }
}

// Glass animations
@keyframes glass-shake {
  0%, 100% { transform: rotate(0deg); }
  25% { transform: rotate(2deg); }
  75% { transform: rotate(-2deg); }
}

@keyframes glass-fade-in {
  from { opacity: 0; transform: scale(0.95); }
  to { opacity: 1; transform: scale(1); }
}

@keyframes glass-fade-out {
  from { opacity: 1; transform: scale(1); }
  to { opacity: 0; transform: scale(0.95); }
}

// Responsive glass mixin
@mixin glass-responsive($breakpoints: (small: 40px, medium: 60px, large: 80px)) {
  @each $size, $width in $breakpoints {
    @if $size == small {
      @media (width <= 600px) {
        width: $width;
      }
    } @else if $size == medium {
      @media (width >= 601px) and (width <= 1500px) {
        width: $width;
      }
    } @else if $size == large {
      @media (width >= 1501px) {
        width: $width;
      }
    }
  }
}

// Base classes for components
.glass-component {
  @include glass-container();
  
  &.glass-card {
    @include glass-card();
  }
  
  &.glass-nav {
    @include glass-nav();
  }
  
  &.glass-sidebar {
    @include glass-sidebar();
  }
  
  &.glass-drawer {
    @include glass-drawer();
  }
}

.glass-button-base {
  @include glass-button();
  
  &.disabled {
    @include glass-disabled();
  }
}

// Component-specific content containers
.nav-contents,
.card-contents,
.button-contents,
.sidebar-contents,
.drawer-contents {
  display: flex;
  flex-direction: column;
  height: 100%;
  box-sizing: border-box;
  
  // Style native elements to match glass during loading
  a, button {
    @include native-glass-button();
    margin: 4px auto;
    
    &.current, &.disabled {
      @include glass-disabled();
    }
  }
}

// Sidebar-specific adjustments
.sidebar-contents {
  justify-content: space-between;
  padding: 16px 2px;
}

// Nav-specific adjustments  
.nav-contents {
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
}

// Card-specific adjustments
.card-contents {
  padding: 20px;
  
  a, button {
    width: auto;
    min-width: 120px;
    border-radius: 25px;
    padding: 8px 16px;
  }
}

// Button-specific adjustments
.button-contents {
  padding: 0;
  
  a, button {
    width: 100%;
    height: 100%;
    border-radius: inherit;
    margin: 0;
  }
}

// Native drawer content styling to match glass during loading
@mixin native-drawer-content() {
  .drawer-content-container,
  .drawer-content {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    transition: opacity 300ms ease-out, background 300ms ease;
    padding: 16px;
    margin: 8px;
  }
  
  .drawer-header {
    background: rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(8px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.15);
    padding: 12px 16px;
    
    .drawer-title {
      color: rgba(255, 255, 255, 0.9);
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }
  }
}

// Drawer-specific adjustments
.drawer-contents {
  height: 0;
  overflow: hidden;
  transition: height 0.3s ease;
  
  @include native-drawer-content();
  
  &.expanded {
    height: auto;
  }
}
