@use "emoji";
@use "variables";

/* Drawer container styles - using new glass system */
.drawer-container {
    position: fixed;
    bottom: 0;
    right: 0;
    width: 100vw;
    height: 60px;
    display: flex;
    z-index: 2;
    transition: height 0.3s;
    pointer-events: none;

    @media screen and (width <= 450px) {
        right: auto;
        justify-content: center;
    }
}

.drawer {
    // Include base glass styles directly instead of extending
    background: linear-gradient(
        135deg,
        rgba(255, 255, 255, var(--glass-background-opacity)) 0%,
        rgba(255, 255, 255, calc(var(--glass-background-opacity) * 0.7)) 50%,
        rgba(255, 255, 255, calc(var(--glass-background-opacity) * 0.5)) 100%
    );
    backdrop-filter: blur(var(--glass-blur-radius)) saturate(var(--glass-saturation));
    border: 1px solid rgba(255, 255, 255, var(--glass-border-opacity));
    box-shadow: 
        var(--glass-shadow-light),
        inset 0 1px 0 rgba(255, 255, 255, calc(var(--glass-border-opacity) * 0.6)),
        inset 0 -1px 0 rgba(255, 255, 255, calc(var(--glass-border-opacity) * 0.3));
    
    // Drawer-specific positioning and layout
    position: fixed;
    bottom: 0;
    right: 0;
    width: var(--drawer-width);
    height: var(--drawer-height-collapsed);
    display: flex;
    flex-direction: column;
    z-index: 3;
    border-bottom: none;
    border-radius: var(--drawer-border-radius) var(--drawer-border-radius) 0 0;
    transition: height var(--glass-transition-medium) var(--glass-easing);
    overflow: hidden;
    
    // Override specific behaviors
    pointer-events: auto;
    margin: 0 2.5%;
    
    // Content positioning
    > * {
        position: relative;
        z-index: 1;
    }
    
    // Enhanced state (when WebGL is active)
    &.glass-enhanced {
        background: transparent;
        backdrop-filter: none;
        border: none;
        box-shadow: none;
        
        .glass-overlay {
            position: absolute;
            inset: 0;
            z-index: 0;
            pointer-events: none;
            border-radius: inherit;
            
            canvas {
                width: 100%;
                height: 100%;
                pointer-events: none;
                border-radius: inherit;
            }
        }
    }
    
    // Responsive adjustments
    @media (max-width: 450px) {
        right: auto;
        left: 50%;
        transform: translateX(-50%);
        width: 90%;
        max-width: var(--drawer-width);
    }
    
    // Expanded state
    &.expanded {
        height: var(--drawer-height-expanded);
    }
}

.drawer-header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding: 2px;
    border-bottom: none;
}

.drawer-content-container {
    font-family: Hack, Noto-Sans, monospace;
    font-size: 18px;
    color: variables.$hp-primary;
    text-align: left;
    margin-left: 5%;
    margin-right: 5%;
    border-radius: 10px;
    // Glass effects now handled by glass system
}

.drawer-content {
    font-family: Hack, Noto-Sans, monospace;
    font-size: 18px;
    color: variables.$hp-primary;
    text-align: left;
    margin-left: 5%;
    margin-right: 5%;

    @media screen and (width <= 600px) {
        font-size: 16px;
    }
}

.drawer-contents {
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 0;
    padding: 2px;
    box-sizing: border-box;
    overflow: hidden;
    transition: height 0.3s ease;

    .drawer-expanded & {
        height: calc(600px - 60px);
    }

    .drawer-content-container,
    .drawer-content {
        transition: opacity 300ms ease-out;
    }
}

.drawer-toggle {
    // Include base glass styles directly
    background: linear-gradient(
        135deg,
        rgba(255, 255, 255, var(--glass-background-opacity)) 0%,
        rgba(255, 255, 255, calc(var(--glass-background-opacity) * 0.7)) 50%,
        rgba(255, 255, 255, calc(var(--glass-background-opacity) * 0.5)) 100%
    );
    backdrop-filter: blur(var(--glass-blur-radius)) saturate(var(--glass-saturation));
    border: 1px solid rgba(255, 255, 255, var(--glass-border-opacity));
    box-shadow: 
        var(--glass-shadow-light),
        inset 0 1px 0 rgba(255, 255, 255, calc(var(--glass-border-opacity) * 0.6)),
        inset 0 -1px 0 rgba(255, 255, 255, calc(var(--glass-border-opacity) * 0.3));
    
    // Button-specific styling
    display: flex;
    justify-content: center;
    align-items: center;
    width: 50px;
    height: 50px;
    margin-right: 1.15%;
    border-radius: 50%;
    cursor: pointer;
    transition: all var(--glass-transition-fast) var(--glass-easing);

    @media screen and (width <= 450px) {
        margin-right: 0;
        position: relative;
    }
    
    &:hover {
        background: linear-gradient(
            135deg,
            rgba(255, 255, 255, var(--glass-hover-opacity)) 0%,
            rgba(255, 255, 255, calc(var(--glass-hover-opacity) * 0.7)) 50%,
            rgba(255, 255, 255, calc(var(--glass-hover-opacity) * 0.5)) 100%
        );
        transform: scale(1.1);
    }
    
    &:active {
        transform: scale(0.95);
    }
}

.drawer-icons {
    width: 100%;
    user-select: none;
    transition: transform 0.3s ease;

    .drawer-expanded & {
        transform: rotate(180deg);
    }
}

.drawer-link {
    font-family: Hack-Italic, Noto-Sans, monospace;
    font-size: 18px;
    color: variables.$hp-secondary;
    text-decoration: underline;

    @media screen and (width <= 600px) {
        font-size: 16px;
    }
}

.drawer-title {
    font-family: Hack, Noto-Sans, monospace;
    font-size: 20px;
    color: variables.$sidebar-icon;
    margin-left: 5%;
}
