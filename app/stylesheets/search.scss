@use "variables";
@use "components/text_effects";
@use "sass:color";

.sp-main {
    font-family: "Lazer84", Noto-Sans, cursive;
    color: variables.$sp-primary;
    margin: 0;
    padding: 0 20px;
    width: calc(100% - 40px);
    white-space: nowrap;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 10px;

    // Apply text glow to headings
    h1,
    span {
        @extend %text-glow-primary;
    }
}

.sp-main h1.large,
.sp-main span.small {
    margin: 0;
    padding: 0;
    line-height: 1;
}

.sp-main .large {
    font-size: 7.5vw;
}

.sp-main .small {
    display: none;
}

@media (width <= 600px) {
    .sp-main .large {
        display: none;
    }

    .sp-main .small {
        display: inline;
        font-size: 12.5vw;
    }
}

.sp-main span {
    font-size: clamp(100px, 15vw, 200px);
    transition: font-size 0.3s ease;
}

@media screen and (width <= 600px) {
    .sp-main {
        white-space: normal;
        word-wrap: break-word;
        line-height: 0.9;
        margin-top: 5%;
        margin-bottom: 5%;
    }
}

@mixin sp-aligner {
    margin: 15px 17.5% 10px;
}

@mixin lesser-sp-aligner {
    margin: 15px 12.5% 10px;
}

@mixin modified-lesser-sp-aligner {
    margin: 15px 10% 10px;
}

@mixin modified-lesser-sp-aligner-tutorial {
    margin: 0 10% 10px;
}

.sp-search-bar {
    display: flex;
    flex-grow: 1;
}

.sp-search-bar-container {
    // Glass effects now handled by liquid glass system
    margin-left: 10%;
    margin-right: 10%;
    position: relative;
    flex-grow: 1;
    display: flex; // keep the container sized tightly to its content height
    align-items: stretch;

    // Ensure content appears above glass canvas
    > * {
        position: relative;
        z-index: 2;
    }

    // Default fallback styles (always applied)
    background-color: variables.$glass;
    backdrop-filter: blur(10px);
    box-shadow: 0 4px 30px variables.$box-shadow;
    border-radius: 12px;

    // Hide fallback styles when liquid glass is active
    &[data-glass-active="true"] {
        background: transparent;
        backdrop-filter: none;
        box-shadow: none;
        border: none;
    }
}

.sp-search-bar-input {
    // Input styling without glass effects
    color: variables.$sp-primary;
    font-family: Hack, Noto-Sans, monospace;
    width: 100%;
    padding: 10px;
    font-size: 18px;
    border: none;
    border-radius: inherit; // match container radius so glass bounds = input bounds
    text-align: left;
    background: transparent;
    outline: none;

    &::placeholder {
        color: rgb(255 255 255 / 50%);
    }

    &:focus {
        outline: none;
        border-color: variables.$sp-primary;
        box-shadow: 0 0 5px rgb(0 0 0 / 30%);
    }
}

// Make the search bar card glass match the input size exactly
.sp-search-bar-container.glass.glass-card-base {
    padding: 0; // remove default card padding to avoid oversized glass area
    border-radius: 12px; // defines the pill/rounding used by both glass and input
}

@media screen and (width <= 600px) {
    .sp-search-bar-input {
        font-size: 16px;
    }
}

.sp-experiences-list {
    @include modified-lesser-sp-aligner;

    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 10px;
    font-family: Hack, Noto-Sans, monospace;
    font-size: 18px;
    color: variables.$sp-primary;
}

@media screen and (width <= 600px) {
    .sp-experiences-list {
        grid-template-columns: repeat(1, 1fr);
        font-size: 16px;
    }
}

.sp-experience {
    // Glass effects now handled by liquid glass system
    padding: 0;
    text-align: center;
    min-height: 50px;
    position: relative;

    // Ensure content appears above glass canvas
    > * {
        position: relative;
        z-index: 2;
    }

    // Fallback styles when liquid glass is not available
    // Default fallback styles (always applied)
    background-color: variables.$glass;
    backdrop-filter: blur(10px);
    box-shadow: 0 4px 30px variables.$box-shadow;
    border-radius: 15px;

    // Hide fallback styles when liquid glass is active
    &[data-glass-active="true"] {
        background: transparent;
        backdrop-filter: none;
        box-shadow: none;
        border: none;
    }

    // Federated experience styling
    &.federated-experience {
        border-color: rgb(100 200 255 / 40%);

        &:not([data-glass-active="true"]) {
            background: linear-gradient(
                135deg,
                rgb(100 200 255 / 15%) 0%,
                variables.$glass 60%
            );
        }

        .federated-badge {
            display: inline-block;
            background: rgb(100 200 255 / 20%);
            color: rgb(100 200 255 / 100%);
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 0.8em;
            margin-left: 8px;
            border: 1px solid rgb(100 200 255 / 30%);
        }

        .federated-description {
            font-style: italic;
            color: rgb(100 200 255 / 90%);
        }

        .federated-source {
            color: rgb(100 200 255 / 80%);
            font-weight: 500;
        }
    }
}

.sp-bg {
    margin: 0;
    padding: 0;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: calc(100vh + 30%);
    z-index: -1;
    overflow: hidden;
    background-color: variables.$background;
    pointer-events: none;

    // Style for the raindrop effect iframe
    .raindrop-iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: none;
        pointer-events: none;
        z-index: 0;
        background: transparent;
    }
}

.sp-centerify {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

@media screen and (width <= 600px) {
    .sp-sectionheader {
        font-size: 18px;
    }
}

.sp-author {
    font-family: Hack-Italic, Noto-Sans, monospace;
    font-size: 18px;
    color: variables.$sp-primary;
    text-align: left;
    margin: 5px 15%;
}

@media screen and (width <= 600px) {
    .sp-author {
        font-size: 16px;
    }
}

.search-tutorial {
    @include modified-lesser-sp-aligner-tutorial;

    position: relative;
    padding: 1.5rem;
    border-left: 4px solid variables.$sp-primary;
    transition:
        opacity 0.3s ease,
        max-height 0.5s ease,
        margin-bottom 0.5s ease;
    overflow: hidden;

    // Ensure content appears above glass canvas
    > * {
        position: relative;
        z-index: 2;
    }

    // Fallback styles when liquid glass is not available
    // Default fallback styles (always applied)
    background-color: variables.$glass;
    backdrop-filter: blur(10px);
    box-shadow: 0 4px 30px variables.$box-shadow;
    border-radius: 12px;

    // Hide fallback styles when liquid glass is active (keep colored border)
    &[data-glass-active="true"] {
        background: transparent;
        backdrop-filter: none;
        box-shadow: none;
        border-left: 4px solid variables.$sp-primary; // Keep colored border
        border-top: none;
        border-right: none;
        border-bottom: none;
    }

    // When upgraded to glass card base via HAML, ensure compatibility
    &.glass.glass-card-base {
        border-left: 4px solid variables.$sp-primary;

        /* Preserve original spacing and layout */
        padding: 1.5rem;
    }

    &.dismissed {
        opacity: 0;
        max-height: 0;
        padding: 0;
        margin-bottom: 0;
        border: none;
        pointer-events: none;
    }

    .tutorial-dismiss {
        position: absolute;
        top: 12px;
        right: 12px;
    }

    .dismiss-button {
        background: transparent;
        border: none;
        cursor: pointer;
        padding: 5px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        transition:
            background-color 0.2s,
            color 0.2s;

        &:hover {
            background-color: variables.$white-20;
        }

        svg {
            color: variables.$white-60;
            transition: color 0.2s;
        }

        &:hover svg {
            color: variables.$white-90;
        }
    }

    .tutorial-heading {
        font-family: Hack, Noto-Sans, monospace;
        color: variables.$sp-primary;
        margin-top: 0;
        margin-bottom: 0.5rem;
        font-size: 1.25rem;
    }

    .tutorial-description {
        color: variables.$white-80;
        margin-bottom: 0;
        font-family: Hack, Noto-Sans, monospace;
    }
}
