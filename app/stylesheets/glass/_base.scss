/* Glass System Base Styles
 * Core glass effect implementation using production-ready CSS
 * Works without JavaScript, enhanced with WebGL when available
 */

/* Core .glass class now mapped to `.liquid-glass` in _liquid.scss */

@use "./liquid" as *;

/* Glass Button Component */
.glass-button {
    @include liquid-glass-core;

    &::before {
        @include liquid-glass-before;
    }

    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 8px 16px;
    border-radius: var(--glass-border-radius-small);
    cursor: pointer;
    text-decoration: none;
    transition: all var(--glass-transition-fast) var(--glass-easing);
    position: relative;

    /* CSS-only implementation tuned to mimic WebGL rim/refraction */
    // No hover motion or visual change

    &:active {
        transform: translateY(0) scale(0.98);
        background: linear-gradient(
            135deg,
            rgb(255 255 255 / var(--glass-active-opacity)) 0%,
            rgb(255 255 255 / calc(var(--glass-active-opacity) * 0.7)) 50%,
            rgb(255 255 255 / calc(var(--glass-active-opacity) * 0.5)) 100%
        );
    }

    &:disabled,
    &.disabled {
        opacity: var(--glass-disabled-opacity);
        cursor: not-allowed;
        transform: none;
    }
}

/* Loading Animation */
@keyframes glass-loading-shimmer {
    0% {
        left: -100%;
    }

    100% {
        left: 100%;
    }
}

/* High Contrast Mode Fallbacks */
@media (prefers-contrast: high) {
    .glass {
        background: rgb(255 255 255 / 95%);
        border: 2px solid #000;
        backdrop-filter: none;
    }

    .glass-button {
        background: rgb(255 255 255 / 90%);
        border: 1px solid #000;

        &:hover {
            background: rgb(255 255 255 / 100%);
        }
    }
}
