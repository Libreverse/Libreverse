/* Copyright (c) 2025 by Lucas Romero Di Benedetto (https://codepen.io/lucasromerodb/pen/vEOWpYM)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

/* LIQUID GLASS STYLES - GENERIC VERSION */

/*
To use this generic liquid glass effect:
1. Add the class "liquid-glass" to any HTML element (e.g., <div class="liquid-glass">Your content here</div>).
   - No additional child HTML elements or SVG tags are requiredâ€”the filter is embedded directly in the CSS via a data URI.
2. The content of the element will appear on top of the effect.
3. Adjust as needed for specific use cases (e.g., add display: flex for layout, override color for text/icons).
   - Note: This works in modern browsers supporting CSS filters and SVG data URIs. For older browsers, the distortion may not apply, but the basic glass effect (blur, tint, shine) will still work via backdrop-filter.
*/

@mixin liquid-glass-core {
    position: relative;

    /* Default to block for general containers; specific components can override */
    display: block; /* Change to 'inline-flex', 'flex', etc., in component bases if needed */
    font-weight: 600;
    overflow: hidden;
    isolation: isolate; /* create stacking context for pseudo-elements */
    color: black;
    cursor: default;
    box-shadow:
        0 6px 6px rgb(0 0 0 / 20%),
        0 0 20px rgb(0 0 0 / 10%);

    /* inset shine is handled on ::after */

    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 2.2);

    /* ensure content is above effect and overlay */
    > * {
        position: relative;
        z-index: 3;
    }

    /* Backdrop blur applied on the parent avoids displaced-edge artifacts */
    backdrop-filter: saturate(var(--glass-saturation))
        blur(var(--glass-blur-radius));
}

@mixin liquid-glass-before {
    content: "";
    position: absolute;
    z-index: 0;
    inset: -6px; /* oversize to avoid displacement pulling transparent edges */
    border-radius: inherit;
    transform: translateZ(0); /* mitigate subpixel seams on some GPUs */
    will-change: filter, backdrop-filter;

    /* Provide pixels for the SVG displacement to act on */
    background:
        radial-gradient(
            120% 100% at 0% 0%,
            rgb(255 255 255 / 18%) 0%,
            rgb(255 255 255 / 8%) 40%,
            rgb(255 255 255 / 4%) 70%,
            rgb(255 255 255 / 1%) 100%
        ),
        linear-gradient(
            135deg,
            rgb(255 255 255 / 12%) 0%,
            rgb(255 255 255 / 6%) 48%,
            rgb(255 255 255 / 3%) 100%
        );

    /* Foreground distortion for a liquid feel */
    filter: url("#glass-distortion");

    /* Fade the very edges to hide any residual seam at extreme pixels */
    mask-image: radial-gradient(
        120% 120% at 50% 50%,
        #000 96%,
        rgb(0 0 0 / 0%) 100%
    );
    overflow: hidden;
    pointer-events: none; /* ensure clicks go to content */
}

/* overlay with tint + inner shine */
@mixin liquid-glass-overlay {
    content: "";
    position: absolute;
    z-index: 2;
    inset: 0;
    border-radius: inherit;
    border: 1px solid rgb(255 255 255 / 14%);
    box-sizing: border-box;
    background: rgb(0 0 0 / 10%);
    box-shadow:
        inset 1px 1px 0 0 rgb(255 255 255 / 25%),
        inset -1px -1px 0 0 rgb(255 255 255 / 15%);
    pointer-events: none;
}

.liquid-glass {
    @include liquid-glass-core;
}

.liquid-glass::before {
    @include liquid-glass-before;
}

.liquid-glass::after {
    @include liquid-glass-overlay;
}

/* Map legacy .glass to the new liquid glass look, overriding prior base styles */
.glass {
    @include liquid-glass-core;

    /* Neutralize old base props to avoid double effects */
    border: 0;
}

.glass::before {
    @include liquid-glass-before;
}

.glass::after {
    @include liquid-glass-overlay;
}
