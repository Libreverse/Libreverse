@use "variables";

/* stylelint-disable selector-class-pattern */

// Hint GPU that the smooth-scroll container will be transformed continuously.
[data-scroll-container] {
    will-change: transform;
}

@mixin glass-effect {
    background-color: variables.$glass;
    backdrop-filter: blur(10px);
    box-shadow: 0 4px 30px variables.$box-shadow;
    border: 1px solid variables.$glass-border;
}

.c-scrollbar {
    position: absolute;
    right: 0;
    top: 0;
    width: 11px;
    height: 100%;
    background: transparent;
    transform-origin: center right;
    transition:
        transform 0.3s,
        opacity 0.3s;
    opacity: 0;
}

.c-scrollbar:hover {
    transform: scaleX(1.45);
}

.c-scrollbar:hover,
.has-scroll-scrolling .c-scrollbar,
.has-scroll-dragging .c-scrollbar {
    opacity: 1;
}

[data-scroll-direction="horizontal"] .c-scrollbar {
    width: 100%;
    height: 10px;
    top: auto;
    bottom: 0;
    transform: scaleY(1);
}

[data-scroll-direction="horizontal"] .c-scrollbar:hover {
    transform: scaleY(1.3);
}

.c-scrollbar_thumb {
    position: absolute;
    top: 0;
    right: 0;
    opacity: 0.5;
    width: 7px;
    border-radius: 10px;
    margin: 2px;
    cursor: grab;
    transition: opacity 0.3s;

    // Default fallback styles (always applied)
    @include glass-effect;

    // Hide fallback styles when liquid glass is active
    &[data-glass-active="true"] {
        background: transparent;
        backdrop-filter: none;
        box-shadow: none;
        border: none;
    }
}

.has-scroll-dragging .c-scrollbar_thumb {
    cursor: grabbing;
    opacity: 0.8;
}

[data-scroll-direction="horizontal"] .c-scrollbar_thumb {
    right: auto;
    bottom: 0;
}

/* stylelint-enable selector-class-pattern */
