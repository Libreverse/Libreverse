@use "variables";

.sidebar {
    // Include base glass styles directly instead of extending
    background: linear-gradient(
        135deg,
        rgb(255 255 255 / var(--glass-background-opacity)) 0%,
        rgb(255 255 255 / calc(var(--glass-background-opacity) * 0.7)) 50%,
        rgb(255 255 255 / calc(var(--glass-background-opacity) * 0.5)) 100%
    );
    backdrop-filter: blur(var(--glass-blur-radius))
        saturate(var(--glass-saturation));

    /* Borders: top/right/bottom only; keep screen-edge (left) clean */
    border: none;
    border-top: 1px solid rgb(255 255 255 / var(--glass-border-opacity));
    border-right: 1px solid rgb(255 255 255 / var(--glass-border-opacity));
    border-bottom: 1px solid rgb(255 255 255 / var(--glass-border-opacity));

    /* Logical props for RTL too */
    border-block-start: 1px solid rgb(255 255 255 / var(--glass-border-opacity));
    border-block-end: 1px solid rgb(255 255 255 / var(--glass-border-opacity));
    border-inline-end: 1px solid rgb(255 255 255 / var(--glass-border-opacity));
    box-shadow:
        var(--glass-shadow-light),
        inset 0 1px 0 rgb(255 255 255 / calc(var(--glass-border-opacity) * 0.6)),
        inset 0 -1px 0
            rgb(255 255 255 / calc(var(--glass-border-opacity) * 0.3));

    // Sidebar-specific positioning and layout
    position: fixed;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    z-index: 5;
    height: 80vh;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    padding: 0;

    /* No border on the screen edge */
    overflow: hidden;
    background-clip: padding-box;

    /* Extra safety for perfect rounding */
    clip-path: inset(
        0 round 0 var(--sidebar-border-radius) var(--sidebar-border-radius) 0
    );

    /* Fallback/ridge cases */
    border-top-right-radius: var(--sidebar-border-radius) !important;
    border-bottom-right-radius: var(--sidebar-border-radius) !important;
    transition: all var(--glass-transition-medium) var(--glass-easing);

    // Ensure border-radius is applied consistently across all states
    &,
    &::before,
    &::after {
        border-radius: 0 var(--sidebar-border-radius)
            var(--sidebar-border-radius) 0 !important;
    }

    /* Remove overlay (after) border on the screen edge */
    &::after {
        border-left: 0 !important;
        border-inline-start: 0 !important;

        /* Remove inner highlight that can appear as a border */
        box-shadow: none !important;

        /* Clip overlay to the same rounded shape */
        clip-path: inset(
            0 round 0 var(--sidebar-border-radius) var(--sidebar-border-radius)
                0
        );

        /* Ensure no 1px on the screen edge from any effect */
        mask-image: linear-gradient(
            to right,
            transparent 0,
            transparent 1px,
            #000 1px,
            #000 100%
        );
    }

    /* Match clipping on the displaced layer too */
    &::before {
        clip-path: inset(
            0 round 0 var(--sidebar-border-radius) var(--sidebar-border-radius)
                0
        );
        border-top-right-radius: var(--sidebar-border-radius) !important;
        border-bottom-right-radius: var(--sidebar-border-radius) !important;
    }

    // Content positioning
    > * {
        position: relative;
        z-index: 1;
    }

    // WebGL enhanced state removed - CSS-only implementation

    // Responsive width
    width: var(--sidebar-width-medium);

    @media (max-width: var(--breakpoint-mobile)) {
        width: var(--sidebar-width-small);
    }

    @media (width >= calc(var(--breakpoint-tablet) + 1px)) {
        width: var(--sidebar-width-large);
    }

    // Override any specific behaviors not covered by the glass system
    pointer-events: auto;

    /* Absolutely forbid a left/inline-start border on the sidebar */
    border-left: 0 !important;
    border-inline-start: 0 !important;

    // Base link styling using glass system
    .sidebar-link,
    .sidebar-logout-button {
        // Remove background - use transparent instead of glass gradient
        background: transparent;
        backdrop-filter: none;
        border: none;
        box-shadow: none;

        // Sidebar button sizing
        width: var(--sidebar-button-size-medium);
        height: var(--sidebar-button-size-medium);
        min-width: var(--sidebar-button-size-medium);
        min-height: var(--sidebar-button-size-medium);
        border-radius: var(--glass-border-radius-small);
        margin: 3px auto;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all var(--glass-transition-fast) var(--glass-easing);

        /* Responsive button sizing */
        @media (max-width: var(--breakpoint-mobile)) {
            width: var(--sidebar-button-size-small);
            height: var(--sidebar-button-size-small);
            min-width: var(--sidebar-button-size-small);
            min-height: var(--sidebar-button-size-small);
        }

        @media (width >= calc(var(--breakpoint-tablet) + 1px)) {
            width: var(--sidebar-button-size-large);
            height: var(--sidebar-button-size-large);
            min-width: var(--sidebar-button-size-large);
            min-height: var(--sidebar-button-size-large);
        }

        // Sidebar-specific overrides
        text-decoration: none;
        cursor: pointer;
        position: relative;
        z-index: 2;
        color: inherit;

        // Icon styling
        img.sidebar-icons,
        svg {
            width: 24px;
            height: 24px;
            display: block;
            flex-shrink: 0;
            filter: drop-shadow(0 1px 2px rgb(0 0 0 / 20%));
            transition: filter var(--glass-transition-fast) ease;
        }

        // Current page styling
        &.sidebar-current {
            opacity: 0.6;
            cursor: default;

            &:hover {
                transform: none;
            }
        }
    }
}

// Override glass-sidebar mixin with our larger sizing
.sidebar.glass-sidebar,
.sidebar.glass-component {
    // Force our responsive widths over the mixin defaults with highest specificity
    width: inherit !important;

    @media (width <= 600px) {
        width: 48px !important;
        min-width: 48px !important;
        max-width: 48px !important;
    }

    @media (width >= 601px) and (width <= 1500px) {
        width: 56px !important;
        min-width: 56px !important;
        max-width: 56px !important;
    }

    @media (width >= 1501px) {
        width: 64px !important;
        min-width: 64px !important;
        max-width: 64px !important;
    }
}

// Remove special WebGL container overrides
