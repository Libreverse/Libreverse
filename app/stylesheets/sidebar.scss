@use "variables";

.sidebar {
    // Base fixed width (using previous "expanded" sizes)
    width: 60px;
    height: 80vh;

    --sidebar-border-radius: 20px; // Define border radius as a variable

    border-radius: 0 var(--sidebar-border-radius) var(--sidebar-border-radius) 0;
    z-index: 5;
    position: fixed;
    top: 50%;
    left: 0;
    transform: translateY(-50%); // Vertical centering
    pointer-events: auto;

    // Default glass-like styling that works without JavaScript
    // This ensures the sidebar is always visible and attractive
    background: linear-gradient(
        135deg,
        rgb(255 255 255 / 12%) 0%,
        rgb(255 255 255 / 8%) 50%,
        rgb(255 255 255 / 6%) 100%
    );
    backdrop-filter: blur(15px) saturate(1.8);
    border-top: 1px solid rgb(255 255 255 / 18%);
    border-right: 1px solid rgb(255 255 255 / 18%);
    border-bottom: 1px solid rgb(255 255 255 / 18%);
    border-left: none;
    box-shadow:
        0 8px 32px rgb(0 0 0 / 15%),
        inset 0 1px 0 rgb(255 255 255 / 10%),
        inset 0 -1px 0 rgb(255 255 255 / 5%);
    opacity: 1;
    visibility: visible;
    overflow: hidden;

    // Glass container
    .glass-container {
        width: 100%;
        position: absolute;
        inset: 0;
        border-radius: 0 var(--sidebar-border-radius)
            var(--sidebar-border-radius) 0; // Use variable

        overflow: hidden; // Clip canvas to rounded corners

        // Ensure canvas respects border radius
        canvas {
            border-radius: 0 var(--sidebar-border-radius)
                var(--sidebar-border-radius) 0; // Use variable and override inline styles
            // Force clipping with clip-path for WebGL canvas
            clip-path: inset(
                0 0 0 0 round 0 var(--sidebar-border-radius)
                    var(--sidebar-border-radius) 0
            ); // Use variable and override inline styles
        }

        // Proper spacing for glass buttons
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        padding: 16px 2px;
        box-sizing: border-box;
        border-left: none;

        // Glass button styling
        .glass-button {
            width: auto;
            height: auto;
            max-width: none;
            max-height: none;
            margin: 4px auto; // Auto margins for horizontal centering
            flex-shrink: 0;
            display: flex;
            align-items: center;
            justify-content: center;

            .glass-button-text {
                display: flex;
                align-items: center;
                justify-content: center;
                pointer-events: none;
                width: 100%;
                height: 100%;
                position: relative;

                svg {
                    width: 28px; // Larger size to nearly fill the button
                    height: 28px;
                    flex-shrink: 0;
                    display: block;

                    // Don't touch any color properties - let SVG use its original attributes

                    // Ensure paths respect the SVG's fill="none" attribute
                    &[fill="none"] {
                        fill: none;

                        path {
                            fill: none;
                        }
                    }
                }
            }
        }
    }

    // Responsive breakpoints - fixed width values (using previous "expanded" sizes)
    @media (width <= 600px) {
        width: 40px; // Small screen width (was expanded size)

        --sidebar-border-radius: 10px; // Update for small screens
    }

    @media (width >= 601px) and (width <= 1500px) {
        width: 60px; // Default width (was expanded size)
    }

    @media (width >= 1501px) {
        width: 80px; // Large screen width (was expanded size)
    }

    // Improved transition for when glass fails to load
    transition:
        background 0.3s ease,
        border 0.3s ease,
        box-shadow 0.3s ease;

    // Ensure fallback state is handled gracefully
    &:not([data-glass-active], .glass-fallback) {
        // Temporary loading state before fallback activates
        background: rgb(255 255 255 / 5%);
        backdrop-filter: blur(5px);
        border: 1px solid rgb(255 255 255 / 10%);
    }

    // Enhanced state management for glass loading
    &[data-glass-loading="true"] {
        .sidebar-contents {
            opacity: 1;
            transition: opacity 0.3s ease;
        }
    }

    // When explicitly in fallback mode (JS detected glass failure)
    &.glass-fallback {
        // Use the enhanced fallback styles defined in glass_fallbacks.scss
        // This overrides the default styling with more sophisticated effects
        .sidebar-contents {
            opacity: 1;
            visibility: visible;
            z-index: 2;
        }

        // Hide any glass container that might still be present
        .glass-container {
            display: none;
        }
    }

    // Dark mode support for default styling
    [data-theme="dark"] & {
        background: linear-gradient(
            135deg,
            rgb(0 0 0 / 40%) 0%,
            rgb(0 0 0 / 30%) 50%,
            rgb(0 0 0 / 25%) 100%
        );
        border-color: rgb(255 255 255 / 12%);
        box-shadow:
            0 8px 32px rgb(0 0 0 / 25%),
            inset 0 1px 0 rgb(255 255 255 / 8%),
            inset 0 -1px 0 rgb(255 255 255 / 3%);
    }

    // High contrast mode support
    @media (prefers-contrast: high) {
        background: rgb(0 0 0 / 80%);
        border: 2px solid white;
        backdrop-filter: none;
    }

    // Reduced motion support
    @media (prefers-reduced-motion: reduce) {
        transition: none;

        .sidebar-link,
        .sidebar-logout-button {
            transition: none;

            &:hover {
                transform: none;
            }
        }
    }
}

// Native sidebar styling - provides excellent default appearance
// This works perfectly without JavaScript and gets enhanced when glass loads
.sidebar[data-glass-loading="true"] .sidebar-contents,
.sidebar-contents {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
    padding: 16px 2px; // Match glass container padding
    box-sizing: border-box;
    position: relative;
    z-index: 2;

    // Style native links to look like glass buttons by default
    .sidebar-link,
    .sidebar-logout-button {
        width: 40px;
        height: 40px;
        min-width: 40px;
        min-height: 40px;
        max-width: 40px;
        max-height: 40px;
        border-radius: 20px;
        margin: 4px auto;
        display: flex;
        align-items: center;
        justify-content: center;

        // Beautiful glass-like default styling
        background: linear-gradient(
            135deg,
            rgb(255 255 255 / 15%) 0%,
            rgb(255 255 255 / 10%) 50%,
            rgb(255 255 255 / 8%) 100%
        );
        backdrop-filter: blur(10px) saturate(1.5);
        border: 1px solid rgb(255 255 255 / 20%);
        box-shadow:
            0 4px 20px rgb(0 0 0 / 10%),
            inset 0 1px 0 rgb(255 255 255 / 15%),
            inset 0 -1px 0 rgb(255 255 255 / 5%);
        transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
        text-decoration: none;
        flex-shrink: 0;
        position: relative;
        overflow: hidden;

        // Style the icons to match glass button size
        img.sidebar-icons {
            width: 24px;
            height: 24px;
            display: block;
            flex-shrink: 0;
            filter: drop-shadow(0 1px 2px rgb(0 0 0 / 20%));
            transition: filter 0.15s ease;
        }

        // Current page styling
        &.sidebar-default-cursor {
            opacity: 0.6;
            cursor: default;
            filter: grayscale(0.5);
        }

        // Hover effects that work without JavaScript
        &:hover {
            background: linear-gradient(
                135deg,
                rgb(255 255 255 / 22%) 0%,
                rgb(255 255 255 / 18%) 50%,
                rgb(255 255 255 / 15%) 100%
            );
            border-color: rgb(255 255 255 / 30%);
            box-shadow:
                0 6px 25px rgb(0 0 0 / 15%),
                inset 0 1px 0 rgb(255 255 255 / 20%),
                inset 0 -1px 0 rgb(255 255 255 / 8%);
            transform: scale(1.05) translateY(-1px);
        }

        &:hover img.sidebar-icons {
            filter: drop-shadow(0 2px 4px rgb(0 0 0 / 30%));
        }

        &:active:not(.sidebar-default-cursor) {
            transform: scale(0.97);
            box-shadow:
                0 2px 10px rgb(0 0 0 / 20%),
                inset 0 1px 0 rgb(255 255 255 / 10%);
            transition: all 0.1s ease;
        }
    }

    // Dark mode support for sidebar contents
    [data-theme="dark"] & {
        .sidebar-link,
        .sidebar-logout-button {
            background: linear-gradient(
                135deg,
                rgb(255 255 255 / 8%) 0%,
                rgb(255 255 255 / 5%) 50%,
                rgb(255 255 255 / 3%) 100%
            );
            border-color: rgb(255 255 255 / 15%);

            &:hover {
                background: linear-gradient(
                    135deg,
                    rgb(255 255 255 / 12%) 0%,
                    rgb(255 255 255 / 8%) 50%,
                    rgb(255 255 255 / 6%) 100%
                );
                border-color: rgb(255 255 255 / 20%);
            }
        }
    }

    // High contrast mode for sidebar contents
    @media (prefers-contrast: high) {
        .sidebar-link,
        .sidebar-logout-button {
            background: rgb(255 255 255 / 90%);
            border: 2px solid black;
            color: black;

            img.sidebar-icons {
                filter: invert(1);
            }
        }
    }
}

.sidebar-icons {
    width: 24px;
    height: 24px;
    user-select: none;
    display: block;
    flex-shrink: 0;
}

.sidebar-disabled {
    opacity: 0.6;
    cursor: default;
    filter: grayscale(0.5);

    // Don't disable pointer-events - we need clicks for shake animation
}

.sidebar-current {
    filter: brightness(0.75);
}

@keyframes sidebar-shake {
    0%,
    100% {
        transform: rotate(0deg);
    }

    25% {
        transform: rotate(2deg);
    }

    75% {
        transform: rotate(-2deg);
    }
}

.sidebar-not-allowed-shake {
    animation: sidebar-shake 0.75s ease-in-out infinite;
    will-change: transform;
}

.sidebar-default-cursor {
    cursor: default;
}
