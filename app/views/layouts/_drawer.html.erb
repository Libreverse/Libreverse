<% drawer_id = local_assigns.fetch(:drawer_id, "main") %>
<%# Use local passed from reflex render, falling back to helper for initial load %>
<%# NOTE: Using helper directly now %>
<%# Determine the expanded state: prioritize the passed local variable if available, otherwise fall back to the helper method %>
<% expanded =
  local_assigns.key?(:expanded) ? expanded : drawer_expanded?(drawer_id) %>
<aside
  class="drawer-container"
  id="<%= drawer_id %>-drawer"
  <%# Ensure this matches morph selector %>
  role="complementary"
  data-controller="drawer"
>
  <div
    class="drawer <%= 'drawer-expanded' if expanded %>"
    data-drawer-id="<%= drawer_id %>"
    data-expanded="<%= expanded %>"
    aria-labelledby="drawer-title-<%= drawer_id %>"
  >
    <div class="drawer-header">
      <h2 id="drawer-title-<%= drawer_id %>" class="drawer-title">
        <% if content_for?(:drawer_title) %>
          <%= yield(:drawer_title) %>
        <% else %>
          Attribution
        <% end %>
      </h2>
      <button
        class="drawer-toggle"
        type="button"
        data-action="drawer#toggle"
        aria-label="Toggle drawer"
        aria-expanded="<%= expanded %>"
        aria-controls="drawer-content-<%= drawer_id %>"
        data-reflex-root="#<%= drawer_id %>-drawer, body"
      >
        <img
          src="<%= svg_icon_data_url('chevron-up') %>"
          class="drawer-icons <%= 'rotated' if expanded %>"
          loading="lazy"
          decoding="async"
          fetchpriority="low"
          draggable="false"
          alt="Toggle drawer"
          data-drawer-target="icon"
        >
      </button>
    </div>
    <div
      class="drawer-contents"
      id="drawer-content-<%= drawer_id %>"
      data-drawer-target="content"
      data-reflex-permanent
    >
      <div class="drawer-content-container">
        <div class="drawer-content">
          <% if content_for?(:drawer) %>
            <%= yield(:drawer) %>
          <% else %>
            <%= render("layouts/default_drawer_content") %>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</aside>
