-# Determine whether the sidebar should appear expanded on initial render.
- expanded_on_render = local_assigns.fetch(:expanded, 'f') == 't'
- sidebar_hovered = sidebar_hovered_bool = local_assigns.fetch(:sidebar_hovered, 'f') == 't' # Assumes sidebar_hovered is 't' or 'f'

%nav{id: "sidebar-nav-#{sidebar_id}",
     class: ["sidebar", ("sidebar-hovered" if expanded_on_render)].compact.join(" "),
     role: "navigation",
     aria: {expanded: expanded_on_render.to_s, label: "Navigation Sidebar"},
     data: {
       controller: "sidebar",
       action: "mouseenter->sidebar#mouseEnter mouseleave->sidebar#mouseLeave",

       # Stimulus values (preferred)
       "expanded-value": expanded_on_render.to_s,
       "hovered-value": sidebar_hovered_bool.to_s,

       # Legacy / CSS helpers (kept for compatibility – can be removed once all
       # code paths rely exclusively on the `*-value` attributes above)
       expanded: expanded_on_render.to_s,
       "hovered": sidebar_hovered_bool.to_s,

       "reflex-root": "#sidebar-nav-#{sidebar_id}",
       "sidebar-id": sidebar_id,
     }}
  .sidebar-contents
    - current_path = request.path

    -# Public links – always visible
    - public_links = [{ path: '/', icon: 'libreverse-logo', label: 'homepage' }, { path: '/search', icon: 'search', label: 'search page' }, { path: '/settings', icon: 'settings', label: 'settings page' }]
    - public_links.each do |item|
      - item_is_current = (current_path == item[:path])
      = link_to item[:path],
                class: "sidebar-link#{' sidebar-default-cursor' if item_is_current}",
                aria: { label: (item_is_current ? "On #{item[:label]}" : "Go to #{item[:label]}") },
                data: { controller: 'link',
                        action: 'click->link#click',
                        'link-is-current-value': item_is_current.to_s,
                        path: item[:path] } do
        = sidebar_icon(svg_icon_data_url(item[:icon]), (item_is_current ? 'sidebar-current' : ''))

    / Authentication links
    - if rodauth.logged_in? && !rodauth.guest_logged_in?
      - auth_links = [{ path: dashboard_path, icon: 'dashboard', label: 'dashboard' }, { path: experiences_path, icon: 'experiences', label: 'experiences page' }]
      - auth_links.each do |item|
        - item_is_current = (current_path == item[:path])
        = link_to item[:path],
                  class: "sidebar-link#{' sidebar-default-cursor' if item_is_current}",
                  aria: { label: (item_is_current ? "On #{item[:label]}" : "Go to #{item[:label]}") },
                  data: { controller: 'link',
                          action: 'click->link#click',
                          'link-is-current-value': item_is_current.to_s,
                          path: item[:path] } do
          = sidebar_icon(svg_icon_data_url(item[:icon]), (item_is_current ? 'sidebar-current' : ''))

      = button_to rodauth.logout_path,
                  method: :post,
                  class: 'sidebar-link sidebar-logout-button',
                  aria: { label: 'Sign out' } do
        = sidebar_icon(svg_icon_data_url('logout'))
    - else
      - guest_links = [{ path: rodauth.login_path, icon: 'login', label: 'login page' }, { path: rodauth.create_account_path, icon: 'signup', label: 'sign-up page' }]
      - guest_links.each do |item|
        - item_is_current = (current_path == item[:path])
        = link_to item[:path],
                  class: "sidebar-link#{' sidebar-default-cursor' if item_is_current}",
                  aria: { label: (item_is_current ? "On #{item[:label]}" : (item[:label] == 'sign-up page' ? 'Sign up' : 'Sign in')) },
                  data: { controller: 'link',
                          action: 'click->link#click',
                          'link-is-current-value': item_is_current.to_s,
                          path: item[:path] } do
          = sidebar_icon(svg_icon_data_url(item[:icon]), (item_is_current ? 'sidebar-current' : ''))
