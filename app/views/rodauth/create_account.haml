= render "layouts/sidebar"

= render "layouts/leniswrapper" do
  = render "layouts/navigationshortcutswrapper" do
    .login-bg{role: "presentation"}
    .lamp-effect-wrapper
      .lamp-effect
        .lamp-left-beam
        .lamp-right-beam
        .lamp-center-glow
        .lamp-line
      .login-container
        .login-card.glass.glass-card-base
          .login-header
            %h1 Create Account
            %p Sign up to get started
          = form_with url: rodauth.create_account_path, method: :post, class: "login-form", data: { controller: "form-auto-submit", form_auto_submit_target: "form", form_auto_submit_min_password_length_value: "12" } do |form|
            = invisible_captcha # Use random honeypot with I18n messages
            = hashcash_hidden_field_tag # ActiveHashcash proof-of-work for bot protection
            .login-form-group
              = form.label :login, rodauth.login_label, class: "login-form-label"
              - login_field_class = "login-form-control"
              - login_field_class += " is-invalid" if rodauth.field_error(rodauth.login_param)
              = form.text_field rodauth.login_param,
                                value: params[rodauth.login_param],
                                id: "login",
                                autocomplete: "username",
                                required: true,
                                class: login_field_class,
                                data: { form_auto_submit_target: "input" }
              - if rodauth.field_error(rodauth.login_param)
                = content_tag :span,
                              rodauth.field_error(rodauth.login_param),
                              class: "login-invalid-feedback"
            - if rodauth.create_account_set_password?
              .login-form-group
                = form.label :password, rodauth.password_label, class: "login-form-label"
                - password_field_class = "login-form-control"
                - password_field_class += " is-invalid" if rodauth.field_error(rodauth.password_param)
                = form.text_field rodauth.password_param,
                                  id: "password",
                                  autocomplete: rodauth.password_field_autocomplete_value,
                                  required: true,
                                  class: password_field_class,
                                  data: { form_auto_submit_target: "input" }
                - if rodauth.field_error(rodauth.password_param)
                  = content_tag :span,
                                rodauth.field_error(rodauth.password_param),
                                class: "login-invalid-feedback"
              - if rodauth.require_password_confirmation?
                .login-form-group
                  = form.label "password-confirm",
                               rodauth.password_confirm_label,
                               class: "login-form-label"
                  - password_confirm_field_class = "login-form-control"
                  - password_confirm_field_class += " is-invalid" if rodauth.field_error(rodauth.password_confirm_param)
                  = form.text_field rodauth.password_confirm_param,
                                    id: "password-confirm",
                                    autocomplete: "new-password",
                                    required: true,
                                    class: password_confirm_field_class,
                                    data: { form_auto_submit_target: "input" }
                  - if rodauth.field_error(rodauth.password_confirm_param)
                    = content_tag :span,
                                  rodauth.field_error(rodauth.password_confirm_param),
                                  class: "login-invalid-feedback"
          .login-footer
            = t('rodauth.create_account.footer_have_account')
            %a{ href: rodauth.login_path.to_s }= t('rodauth.create_account.sign_in')
