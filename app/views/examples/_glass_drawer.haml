-# Example: Glass Drawer Component - Usage: Replace the existing drawer partial with this enhanced version

:ruby
  drawer_id = local_assigns.fetch(:drawer_id, "main")
  expanded = local_assigns.key?(:expanded) ? expanded : drawer_expanded?(drawer_id)
  enable_glass = local_assigns.fetch(:enable_glass, true)

%aside.drawer-container{id: "#{drawer_id}-drawer",
                       role: "complementary",
                       data: {
                         controller: "glass-drawer",
                         # Glass configuration
                         "enable-glass-value": true,
                         "component-type-value": "drawer",
                         "corner-rounding-value": "top",
                         "border-radius-value": 20,
                         "tint-opacity-value": 0.1,
                         # Drawer configuration
                         "expanded-value": expanded,
                         "drawer-id-value": drawer_id,
                         "height-value": 60,
                         "expanded-height-value": 600
                       },
                       class: "glass-component glass-drawer"}
  .drawer{class: "#{'drawer-expanded' if expanded}"}
    .drawer-contents
      .drawer-header
        %h2.drawer-title{id: "drawer-title-#{drawer_id}"}
          - if content_for?(:drawer_title)
            = yield(:drawer_title)
          - else
            Enhanced Glass Drawer
        %button.drawer-toggle{"aria-controls": "drawer-content-#{drawer_id}",
                              "aria-expanded": expanded,
                              "aria-label": "Toggle drawer",
                              "data-action": "glass-drawer#toggle",
                              type: "button"}
          = raw svg_icon_data_url("chevron-up")
      .drawer-contents{id: "drawer-content-#{drawer_id}"}
        .drawer-content-container
          .drawer-content
            - if content_for?(:drawer)
              = yield(:drawer)
            - else
              %p This is an enhanced glass drawer with beautiful liquid glass effects!
              %p Features:
              %ul
                %li Smooth glass background with blur effects
                %li Preserves original HTML during loading
                %li Enhanced hover and interaction effects
                %li Responsive design
                %li Keyboard navigation (ESC to close)
