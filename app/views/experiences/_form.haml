-# file: experiences/_form.html.haml
= form_with(model: experience, local: true, class: "experience-form") do |form|
  = invisible_captcha # Use random honeypot from expanded list, with I18n messages
  - if experience.errors.any?
    .alert.alert-danger#error-explanation
      .d-flex.align-items-center.mb-2
        %h3.h6.mb-0
          = pluralize(experience.errors.count, "error")
          = t('.errors_prohibited')
      %ul.mb-0.ps-4
        - experience.errors.full_messages.each do |message|
          %li= message
  .form-group
    = form.label :title, class: "form-label"
    .input-group
      = form.text_field :title, class: "form-input", placeholder: "Give your experience a compelling title"
  .form-group
    = form.label :description, class: "form-label"
    .input-group
      = form.text_area :description, class: "form-textarea", placeholder: "Describe your experience in detail. What makes it special?"
    .form-text.text-muted= t('.rich_description_help')
  .form-group
    = form.label :html_file, "Experience HTML File", class: "form-label"
    .input-group
      = form.file_field :html_file, class: "form-control dropzone", accept: "text/html", data: { controller: "experience_upload", action: "dragover->experience_upload#dragOver dragleave->experience_upload#dragLeave drop->experience_upload#drop change->experience_upload#handleChange" }
      .dropzone-error{ data: { experience_upload_target: "error" }, style: "display:none; color: red;" }
    .form-text-2.text-muted= t('.upload_single_html_help')
    - if experience.html_file.attached?
      .mt-2.text-muted
        = t('.current_file')
        = experience.html_file.filename
        = t('.replace_file')

  - if rodauth.logged_in? && current_account&.verified?
    .form-group
      .form-check
        = form.check_box :federate, class: "form-check-input"
        = form.label :federate, "Share with other Libreverse instances", class: "form-check-label"
        %small.form-text.text-muted
          When enabled, this experience will be shared with connected Libreverse instances through ActivityPub federation.

  = content_tag :p, "Your experience will be available after admin approval.", class: "form-note"
  .mt-4
    = form.submit class: "form-submit"
