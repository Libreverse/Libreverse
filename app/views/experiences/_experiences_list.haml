- experiences.each do |experience|
  .sp-experience{"data-controller" => "glass",
                 "data-glass-enable-glass-value" => true,
                 "data-glass-component-type-value" => "card",
                 "data-glass-glass-type-value" => "rounded",
                 "data-glass-border-radius-value" => 5,
                 "data-glass-tint-opacity-value" => 0.1,
                 "data-html2canvas-ignore" => "true"}
    - link_href = experience.respond_to?(:display_path) ? experience.display_path : display_experience_path(experience)
    = link_to link_href, class: "experience-link", target: (experience.respond_to?(:federated?) && (experience.federated? || experience.metaverse?) ? "_blank" : nil), rel: (experience.respond_to?(:federated?) && (experience.federated? || experience.metaverse?) ? "noopener" : nil) do
      %article{itemscope: "", itemtype: "https://schema.org/CreativeWork"}
        %h3{itemprop: "name"}= sanitize experience.title
        %div{itemprop: "description"}
          = sanitize simple_format(experience.description)
        - if experience.author.present?
          %p.sp-author
            %span{itemprop: "author", itemscope: "", itemtype: "https://schema.org/Person"}
              = t('.by')
              %span{itemprop: "name"}= sanitize experience.author
        - if experience.created_at.present?
          %p.creation-date
            = t('.created_at')
            \
            \#{experience.created_at.strftime("%B %d, %Y")}
        - if experience.respond_to?(:approved?) && !experience.approved?
          %p.status-tag.pending= t('.awaiting_approval')
    - if experience.respond_to?(:local?) ? experience.local? : true
      .experience-actions
        - if can? :approve, experience
          = button_to approve_experience_path(experience), method: :patch, class: "experience-action-left approve-action" do
            = t('.approve')
        - if can? :update, experience
          = link_to edit_experience_path(experience), class: "experience-action-left edit-action" do
            = t('.edit_details')
        - if can? :destroy, experience
          = button_to experience_path(experience), method: :delete, class: "experience-action-right delete-action", form: { data: { turbo_confirm: "Are you sure you want to delete this experience?" } } do
            = t('.delete')
