# SQLite configuration for Libreverse
# Uses the enhanced SQLite adapter for better features
default: &default
    adapter: sqlite3
    pool: <%= 
      cpu_cores = Etc.nprocessors / 2
      threads = [[cpu_cores * 2 - 4, 5].max, 20].min
      threads
    %>
    pragmas:
        analysis_limit: 0           # Retained: No query analysis limit, minimal perf impact
        auto_vacuum: 'INCREMENTAL'  # Retained: Incremental vacuum for space reclamation
        automatic_index: 1          # Retained: Auto-indexing for query speed
        busy_timeout: 5000          # Changed: Increased to 5s for better lock handling
        cache_size: -200000         # Retained: 200MB cache size for performance
        cache_spill: 1              # Retained: Enables cache spilling for perf
        cell_size_check: 0          # Changed: Disabled for faster writes
        checkpoint_fullfsync: 0     # Changed: Disabled, Litestream handles durability
        foreign_keys: 1             # Retained: Enforce foreign keys as requested
        fullfsync: 0                # Changed: Disabled, Litestream covers durability
        journal_mode: 'WAL'         # Retained: WAL for high concurrency
        journal_size_limit: 5242880 # Changed: Set 5MB limit to control WAL growth
        locking_mode: 'NORMAL'      # Retained: Compatible with WAL
        mmap_size: 200000000        # Retained: 200MB for mmap, balances memory usage
        page_size: 16384            # Retained: Optimized for modern systems
        secure_delete: 'ON'         # Retained: Secure deletion as requested
        synchronous: 0              # Changed: Set to OFF, Litestream ensures durability
        temp_store: 2               # Retained: Memory-based temp storage
        optimize: 1048578           # Retained: Custom optimization for queries
        wal_autocheckpoint: 500     # Changed: Reduced to 500 pages for frequent checkpoints

development:
    <<: *default
    database: db/libreverse_development.sqlite3

test:
    <<: *default
    database: db/libreverse_test.sqlite3

production:
    primary:
        <<: *default
        adapter: sqlite3
        database: &production_db "/data/production.sqlite3"
    queue:
        <<: *default
        adapter: sqlite3
        database: *production_db
        migrations_paths: db/queue_migrate
    cache:
        <<: *default
        adapter: sqlite3
        database: *production_db
        migrations_paths: db/cache_migrate
    cable:
        <<: *default
        adapter: sqlite3
        database: *production_db
        migrations_paths: db/cable_migrate