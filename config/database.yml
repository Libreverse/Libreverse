# TiDB configuration for Libreverse
# TiDB is MySQL-compatible distributed database

# Common pool size calculation
<%
    # Use centralized ThreadBudget for consistent sizing across app, DB, and workers
    begin
        require './config/thread_budget'
    rescue LoadError
        # ignore; fallback below
    end

    if defined?(ThreadBudget)
        b = ThreadBudget.compute
        # Ensure the DB pool can handle both web threads and Solid Queue worker threads
        # Keep a small headroom of +1 for ActiveRecord maintenance threads
        pool_size = [ b[:app_threads], (b[:sq_threads_per_process] rescue 1) + 1 ].max
        sqlite_threads = b[:sqlite_threads]
    else
        require 'etc'
        nproc = Etc.respond_to?(:nprocessors) ? Etc.nprocessors : 2
        pool_size = [(nproc / 2) * 2 - 4, 5].max
        sqlite_threads = [nproc, 2].max
    end

    # Ensure minimum pool size of 3
    pool_size = [pool_size, 3].max
%>

default: &default
    adapter: trilogy
    encoding: utf8mb4
    collation: utf8mb4_unicode_ci
    pool: <%= pool_size %>
    reconnect: true
    checkout_timeout: 5
    # TiDB works well with these MySQL variables
    variables:
        sql_mode: 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
        # TiDB handles distributed transactions well
        transaction_isolation: 'READ-COMMITTED'

development:
    primary:
        <<: *default
        database: libreverse_development
        username: root
        password: 
        host: 127.0.0.1
        port: 4000
        # Explicitly disable SSL for local TiDB/MySQL dev instance
        ssl_mode: DISABLED
    queue:
        <<: *default
        database: libreverse_development_queue
        username: root
        password: 
        host: 127.0.0.1
        port: 4000
        ssl_mode: DISABLED
        migrations_paths: db/queue_migrate
    cache:
        adapter: postgresql
        encoding: utf8
        database: libreverse_cache_development
        username: postgres
        password: password
        host: localhost
        port: 5432
        pool: <%= pool_size %>
        migrations_paths: db/cache_migrate
        variables:
            # Optimize for SSD storage (default was for HDDs)
            random_page_cost: 1.1

test:
    primary:
        <<: *default
        database: libreverse_test
        username: <%= ENV["TIDB_USERNAME"] %>
        password: <%= ENV["TIDB_PASSWORD"] %>
        host: <%= ENV.fetch("TIDB_HOST", "127.0.0.1") %>
        port: 4000
        # SSL is required in CI/production-like test runs when TIDB_TEST_SSL_MODE is set.
        # For local development the default is DISABLED to avoid
        # "SSL required, not supported by server" errors when TiDB/MySQL was started without TLS.
        # Accepted values (MySQL/TiDB): DISABLED, PREFERRED, REQUIRED, VERIFY_CA, VERIFY_IDENTITY
        ssl_mode: <%= ENV.fetch("TIDB_TEST_SSL_MODE", ENV.fetch("TIDB_SSL_MODE", "DISABLED")) %>
        # sslca always provided; adapter will use it only if ssl_mode requires validation
        sslca: <%= (RUBY_PLATFORM =~ /darwin/ ? "/etc/ssl/cert.pem" : "/etc/ssl/certs/ca-certificates.crt") %>
    queue:
        adapter: sqlite3
        encoding: utf8
        database: db/queue_test.sqlite3
        pool: <%= pool_size %>
        migrations_paths: db/queue_migrate
        schema_dump: false
        database_tasks: false
        pragmas:
            journal_mode: 'WAL'
            synchronous: 0
            cache_size: -8000
            foreign_keys: 0
            temp_store: 2
            wal_autocheckpoint: 1000
    cache:
        adapter: postgresql
        encoding: utf8
        database: libreverse_cache_test
        username: postgres
        password: password
        host: localhost
        port: 5432
        pool: <%= pool_size %>
        migrations_paths: db/cache_migrate
        variables:
            # Optimize for SSD storage (default was for HDDs)
            random_page_cost: 1.1

production:
    primary:
        <<: *default
        database: libreverse_production
        username: <%= ENV["TIDB_USERNAME"] %>
        password: <%= ENV["TIDB_PASSWORD"] %>
        host: <%= ENV["TIDB_HOST"] %>
        port: 4000
        ssl_mode: VERIFY_IDENTITY
        sslca: <%= (RUBY_PLATFORM =~ /darwin/ ? "/etc/ssl/cert.pem" : "/etc/ssl/certs/ca-certificates.crt") %>
    queue:
        <<: *default
        database: libreverse_production
        username: <%= ENV["TIDB_USERNAME"] %>
        password: <%= ENV["TIDB_PASSWORD"] %>
        host: <%= ENV["TIDB_HOST"] %>
        port: 4000
        ssl_mode: VERIFY_IDENTITY
        sslca: /etc/ssl/certs/ca-certificates.crt
        migrations_paths: db/queue_migrate
    cache:
        adapter: postgresql
        encoding: utf8
        database: libreverse_cache_production
        username: <%= ENV["POSTGRESQL_USERNAME"] || "" %>
        password: <%= ENV["POSTGRESQL_PASSWORD"] || "" %>
        host: <%= ENV["POSTGRESQL_HOST"] || "localhost" %>
        port: <%= ENV["POSTGRESQL_PORT"] || 5432 %>
        pool: <%= pool_size %>
        migrations_paths: db/cache_migrate
        variables:
            # Optimize for SSD storage (default was for HDDs)
            random_page_cost: 1.1