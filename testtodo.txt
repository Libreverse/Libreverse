TEST FAILURE & TECH DEBT TODO LIST (Generated 2025-09-20)
=====================================================
Legend: P0 = critical (fix to unblock meaningful test coverage), P1 = important, P2 = nice-to-have / cleanup.
Each item lists: Symptom | Suspected Cause | Proposed Fix | Verification Steps | Notes

P0 ITEMS
--------
1. AccountActionsControllerTest: unknown attribute 'email' for Account
   - Symptom: Two tests fail when building an Account in test/controllers/account_actions_controller_test.rb (lines ~8, 19, 35)
   - Suspected Cause: 'accounts' table lacks an 'email' column OR using hybrid AccountSequel vs ActiveRecord Account with divergent schema. Test likely assumes ActiveRecord model has email.
   - Proposed Fix: (a) Check schema.rb for accounts table. If missing, add migration to include email:string (nullable?) OR (b) Provide virtual attribute / delegate to underlying identity model. (c) Align factories/fixtures with real schema.
   - Verification: Run the two failing tests; ensure export action returns 200 and streaming ZIP includes account.xml with email node.
   - Notes: If email is intentionally elsewhere, adjust test to use the authoritative source (e.g., account.identity.email).

2. GraphQL controller tests: undefined method 'effective_user?' for AccountSequel; multiple auth/admin failures
   - Symptom: Many GraphqlControllerTest failures/errors: system_error messages, nil data, wrong error messages (expected 'Authentication required' etc.).
   - Suspected Cause: GraphQL context building expects an object responding to effective_user? (maybe previously provided by a mixin or wrapper). Switched to a Sequel model (AccountSequel) without method implementation.
   - Proposed Fix: Introduce a presenter or add a concern to AccountSequel implementing effective_user? (and admin?/moderator? if needed). Ensure context[:current_account] (or similar) sets that wrapper. Update schema resolvers to call a stable interface. Add a unit test for GraphqlController#build_context.
   - Verification: Re-run only GraphqlControllerTest; confirm expected error messages and data presence. Add new spec: test/models/account_interface_test.rb for interface behaviors.
   - Notes: Avoid monkey patching directly if Sequel model usedâ€”prefer wrapper to keep separation.

3. Admin::IndexingRunsControllerTest & Admin::IndexersControllerTest returning 500 instead of expected 200/302/401/403
   - Symptom: Four failures: index & show endpoints.
   - Suspected Cause: Before action raising (e.g., referencing current_user.effective_user?), missing policy object, or service dependency not stubbed in test (indexing subsystem maybe hitting external service).
   - Proposed Fix: Inspect controller filters; adjust tests to provide minimal auth context or stub service. Add rescue for unexpected service errors returning 503 (logged). Ensure controller returns 401 when unauthenticated.
   - Verification: Run only the four tests. Add an assertion that no unexpected error logs appear (capture log output).
   - Notes: Might overlap with GraphQL auth issue if shared helper methods.

4. ExperienceTest transliteration error (ASCII-8BIT)
   - Symptom: ArgumentError: Cannot transliterate strings with ASCII-8BIT encoding.
   - Suspected Cause: A callback or validation calling parameterize/transliterate on binary data from fixtures (maybe an attachment or raw content field).
   - Proposed Fix: Before transliteration, force encoding: value = value.dup.force_encoding('UTF-8') unless value.encoding == Encoding::UTF_8; fallback to encode('UTF-8', invalid: :replace, undef: :replace). Guard when empty / binary.
   - Verification: Re-run failing test; add regression test for a binary-ish string.
   - Notes: Centralize in a sanitizer service to reuse.

5. ExperiencesMailerTest filename case mismatch
   - Symptom: Expected array includes "test_experience.html" but actual zipped name is "Test_Experience.html" (case difference).
   - Suspected Cause: Filename derived from Experience title with capitalization; test expects lower snake case.
   - Proposed Fix: Normalize export filenames to a canonical snake_case lowercase via parameterize(separator: '_').downcase OR adjust test to expect current behavior; choose spec that aligns with user-facing requirement.
   - Verification: Run mailer test; inspect generated ZIP entries.
   - Notes: Document naming convention in README or mailer class.

6. CachePreloadJobTest stubbing error (Mocha::StubbingError)
   - Symptom: Test stubs body unnecessarily: Mocha complains.
   - Suspected Cause: Using stub(:body => ...) while real object already returns body; test no longer needs stub or needs expects(:body).returns(...).
   - Proposed Fix: Remove redundant stub or switch to WebMock/HTTParty stub. Ensure only network is prevented.
   - Verification: Run job test file alone.
   - Notes: Add a helper for sitemap fetch stubbing.

7. Trilogy test patch sustainability
   - Symptom: Added initializer modifies adapter globally in test.
   - Suspected Cause: Quick mitigation may mask legitimate batching issues.
   - Proposed Fix: Guard patch under ENV['TRILOGY_PACKET_PATCH']; add focused integration test for fixture loading verifying patch on/off. Explore upstream fix or config (e.g., lower max packet size, disable multi statements).
   - Verification: Run a minimal reproduction with patch disabled to confirm failure scenario documented.
   - Notes: Schedule revisit; create upstream issue reference.

P1 ITEMS
--------
8. Compression ratio warning (account export simulation) shows negative benefit (-27.05%)
   - Symptom: Test logs warning; not a failure.
   - Suspected Cause: Small input size vs ZIP metadata overhead.
   - Proposed Fix: Adjust threshold logic: only warn if size > X and ratio below expected; or aggregate more content into sample to produce realistic compression.
   - Verification: Rerun export simulation and confirm no false warning.
   - Notes: Non-blocking cosmetic improvement.

9. Queue DB test configuration completeness
   - Symptom: Using SQLite with migrations_paths set to db/queue_migrate but may not exist.
   - Suspected Cause: Path empty; no migrations; harmless but misleading.
   - Proposed Fix: Create directory and placeholder README or remove migrations_paths if unused.
   - Verification: Ensure test boot has no warnings; optionally add a simple migration for solid queue tables if needed.
   - Notes: Keep minimal to avoid drift from production.

10. Experience search service assertions sufficiency
   - Symptom: Earlier run showed 0 assertions (due to aborting earlier). Need to ensure tests assert semantic correctness.
   - Suspected Cause: Errors prevented assertions; but review tests to confirm they contain expectations beyond setup.
   - Proposed Fix: Audit test/services/experience_search_service_test.rb for assert count and meaningful checks (e.g., similarity ordering, scope filtering). Add explicit assertions and a guard refute_nil results.
   - Verification: Run that file; ensure >0 assertions and meaningful coverage.
   - Notes: Add performance budget assertion (max query time) if deterministic.

11. Logging & error messaging consistency for auth failures
   - Symptom: GraphQL tests expecting clean messages got system_error with backtrace.
   - Suspected Cause: Unhandled NoMethodError propagating; global error handler not capturing.
   - Proposed Fix: Wrap GraphQL execution with rescue to map unexpected errors to generic message and increment metric; ensure auth checks happen before resolver dispatch.
   - Verification: Rerun GraphQL auth tests; confirm message expectations.
   - Notes: Add instrumentation (ActiveSupport::Notifications) for error counts.

P2 ITEMS
--------
12. Normalize filename case across all export pathways (HTTP export, mailer ZIP, GraphQL download).
13. Introduce shared module for effective_user? semantics used by both REST and GraphQL controllers.
14. Add encoding normalization utility module (e.g., ContentEncodingNormalizer) and apply in relevant models/services.
15. Add test helper to wrap GraphQL queries with context builder to reduce duplication.
16. Evaluate replacing Mocha with Minitest::Mock or WebMock + plain assertions (consistency & less brittle).
17. Add CI task to fail if test run yields 0 assertions in any test file (prevent silent regressions).
18. Document multi-DB test strategy (primary TiDB vs queue SQLite) in README (development & test section).
19. Evaluate moving trilogy patch into spec/support rather than initializer for better isolation.
20. Add Danger or Rubocop rule to flag direct calls to transliterate/parameterize without explicit encoding handling.

IMPLEMENTATION ORDER SUGGESTION
-------------------------------
1. Fix Account model/email (P0-1) -> re-run specific tests.
2. Implement Account auth interface & GraphQL context fix (P0-2) -> run GraphQL tests.
3. Stabilize Admin controller responses (P0-3) -> controller tests.
4. Encoding normalization for Experience (P0-4) -> rerun ExperienceTest.
5. Mailer filename normalization (P0-5) -> mailer test.
6. CachePreloadJob test stub cleanup (P0-6).
7. Document/flag Trilogy patch (P0-7) create issue reference.
8. Proceed through P1 then P2 backlog.

QUICK METRICS / CHECKLIST
-------------------------
[ ] Account has email accessible (schema or virtual).
[ ] effective_user? provided to GraphQL & controllers.
[ ] Admin indexing endpoints return non-500 when unauthenticated.
[ ] Experience transliteration handles binary input.
[ ] Export ZIP filenames standardized (documented).
[ ] CachePreloadJobTest passes without Mocha warning.
[ ] Trilogy patch environment toggle added.
[ ] ExperienceSearchService tests assert expected ordering.
[ ] GraphQL auth errors standardized.

END OF FILE
