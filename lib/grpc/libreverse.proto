syntax = "proto3";

package libreverse;

option ruby_package = "Libreverse::Grpc";

// The Libreverse gRPC service
service LibreverseService {
  // Experience management
  rpc GetAllExperiences(GetAllExperiencesRequest) returns (ExperiencesResponse);
  rpc GetExperience(GetExperienceRequest) returns (ExperienceResponse);
  rpc CreateExperience(CreateExperienceRequest) returns (ExperienceResponse);
  rpc UpdateExperience(UpdateExperienceRequest) returns (ExperienceResponse);
  rpc DeleteExperience(DeleteExperienceRequest) returns (DeleteResponse);
  rpc ApproveExperience(ApproveExperienceRequest) returns (ExperienceResponse);
  rpc GetPendingExperiences(GetPendingExperiencesRequest) returns (ExperiencesResponse);

  // User preferences
  rpc GetPreference(GetPreferenceRequest) returns (PreferenceResponse);
  rpc SetPreference(SetPreferenceRequest) returns (PreferenceResponse);
  rpc DismissPreference(DismissPreferenceRequest) returns (PreferenceResponse);

  // Admin endpoints
  rpc AdminApproveExperience(AdminApproveExperienceRequest) returns (ExperienceResponse);
}

// Request messages
message GetAllExperiencesRequest {
  // Optional filters could be added here
}

message GetExperienceRequest {
  int32 id = 1;
}

message CreateExperienceRequest {
  string title = 1;
  string description = 2;
  string author = 3;
}

message UpdateExperienceRequest {
  int32 id = 1;
  optional string title = 2;
  optional string description = 3;
  optional string author = 4;
}

message DeleteExperienceRequest {
  int32 id = 1;
}

message ApproveExperienceRequest {
  int32 id = 1;
}

message GetPendingExperiencesRequest {
  // No parameters needed
}

message GetPreferenceRequest {
  string key = 1;
}

message SetPreferenceRequest {
  string key = 1;
  string value = 2;
}

message DismissPreferenceRequest {
  string key = 1;
}

message AdminApproveExperienceRequest {
  int32 id = 1;
}

// Response messages
message Experience {
  int32 id = 1;
  string title = 2;
  string description = 3;
  string author = 4;
  bool approved = 5;
  string created_at = 6;
  string updated_at = 7;
  int32 account_id = 8;
}

message ExperienceResponse {
  Experience experience = 1;
  bool success = 2;
  string message = 3;
}

message ExperiencesResponse {
  repeated Experience experiences = 1;
  bool success = 2;
  string message = 3;
}

message DeleteResponse {
  bool success = 1;
  string message = 2;
}

message PreferenceResponse {
  string key = 1;
  string value = 2;
  bool success = 3;
  string message = 4;
}
