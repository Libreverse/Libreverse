name: CI/CD Pipeline

on:
    push:
        branches:
            - "main"
    pull_request:
        branches:
            - "main"

jobs:
    # Quality checks that run on all pushes and PRs
    quality-checks:
        name: üîç Quality Checks
        runs-on: ubuntu-22.04
        if: always()
        
        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Setup Environment
              uses: ./.github/actions/setup-environment

            - name: Code Formatting
              uses: ./.github/actions/code-formatting

            - name: Template & Config Validation
              uses: ./.github/actions/validation

    # Security analysis (runs in parallel)
    security-analysis:
        name: üîí Security Analysis
        runs-on: ubuntu-22.04
        if: always()
        strategy:
            fail-fast: false
            matrix:
                tool: [brakeman, bundle-audit, npm-audit]
                
        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Setup Environment
              uses: ./.github/actions/setup-environment

            - name: Run Security Analysis
              uses: ./.github/actions/security-analysis
              with:
                  tool: ${{ matrix.tool }}

    # Code quality analysis (runs in parallel)
    code-quality:
        name: üìä Code Quality
        runs-on: ubuntu-22.04
        if: always()
        strategy:
            fail-fast: false
            matrix:
                tool: [fasterer, coffeelint, typos]
                
        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Setup Environment
              uses: ./.github/actions/setup-environment

            - name: Run Code Quality Analysis
              uses: ./.github/actions/code-quality
              with:
                  tool: ${{ matrix.tool }}

    # Testing (runs in parallel)
    testing:
        name: üß™ Testing
        runs-on: ubuntu-22.04
        if: always()
        strategy:
            fail-fast: false
            matrix:
                test-suite: [jest, rails-test]
                
        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Setup Environment
              uses: ./.github/actions/setup-environment

            - name: Run Tests
              uses: ./.github/actions/run-tests
              with:
                  test-suite: ${{ matrix.test-suite }}

    # Build and deployment (only runs on main branch and after quality checks pass)
    build-push:
        name: üöÄ Build & Deploy
        runs-on: ubuntu-22.04
        needs: [quality-checks, security-analysis, code-quality, testing]
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - name: Check out code
              uses: actions/checkout@v4

            - name: Bypass Cloudflare for Github Action
              uses: ./.github/actions/bypass-cloudflare
              with:
                  cf_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
                  cf_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}

            - name: Log in to Quay
              uses: docker/login-action@v3
              with:
                  registry: quay.io
                  username: ${{ secrets.QUAY_USERNAME }}
                  password: ${{ secrets.QUAY_PASSWORD }}

            - name: Build Docker image
              run: |
                  docker build -t quay.io/georgebaskervil/libreverse:alpha .

            - name: Push to Quay.io
              run: |
                  docker push quay.io/georgebaskervil/libreverse:alpha

            - name: Trigger Coolify Redeploy
              run: |
                  curl -X GET "https://c.geor.me/api/v1/deploy?uuid=p4wg4ssgokg08s0wkk4cw0sk&force=false" \
                    -H "Content-Type: application/json" \
                    -H "authorization: Bearer ${{ secrets.COOLIFY_API_TOKEN }}"
