name: Static Analysis & Quality Checks

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  sequential-checks:
    name: Sequential Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: |
        bundle install
        bun install
        
    - name: Run Prettier
      run: |
        timeout 30s bun prettier --write . || exit 1
        
    - name: Run Rubocop
      run: bundle exec rubocop -A
      
    - name: Run haml-lint
      run: bundle exec haml-lint --auto-correct .
      
    - name: Run ESLint
      run: bun eslint . --fix
      
    - name: Run Stylelint
      run: bun stylelint '**/*.scss' --fix
      
    - name: Run markdownlint
      run: bun markdownlint-cli2 '**/*.md' '!**/node_modules/**' '!**/licenses/**' --fix --config .markdownlint.json
      
    - name: Update bundle
      run: bundle update
      
    - name: Update bun dependencies
      run: bun update
      
    - name: Run bundle-audit
      run: bundle-audit check --update
      
    - name: Run npm audit (production only)
      run: |
        # Backup existing package-lock.json if it exists
        if [ -f package-lock.json ]; then cp package-lock.json package-lock.json.backup; fi
        npm i --package-lock-only --omit=dev --omit=optional --omit=peer --legacy-peer-deps --force
        npm audit --audit-level=moderate
        # Restore original package-lock.json if backup exists, otherwise remove generated one
        if [ -f package-lock.json.backup ]; then mv package-lock.json.backup package-lock.json; else rm -f package-lock.json; fi
        
    - name: Run Haml validation
      run: bundle exec rake haml:check
      
    - name: Run i18n validation
      run: bundle exec rake i18n:validate_keys

  parallel-checks:
    name: Parallel Quality Checks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tool: [fasterer, coffeelint, typos, jest, rails-test, brakeman]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: |
        bundle install
        bun install
        
    - name: Install typos
      if: matrix.tool == 'typos'
      run: |
        curl -LsSf https://github.com/crate-ci/typos/releases/latest/download/typos-x86_64-unknown-linux-musl.tar.gz | tar xzf - -C ${CARGO_HOME:-~/.cargo}/bin
        
    - name: Run Fasterer
      if: matrix.tool == 'fasterer'
      run: fasterer
      
    - name: Run Coffeelint
      if: matrix.tool == 'coffeelint'
      run: |
        coffee_files=$(find . -path ./node_modules -prune -o -name '*.coffee' -print)
        if [ -n "$coffee_files" ]; then
          echo "$coffee_files" | xargs bun coffeelint -f coffeelint.json
        else
          echo "No .coffee files found, skipping Coffeelint"
        fi
        
    - name: Run Typos
      if: matrix.tool == 'typos'
      run: typos
      
    - name: Run Jest
      if: matrix.tool == 'jest'
      run: NODE_OPTIONS='--experimental-vm-modules' npx jest --coverage=false
      
    - name: Run Rails tests
      if: matrix.tool == 'rails-test'
      run: bundle exec rails test
      
    - name: Run Brakeman
      if: matrix.tool == 'brakeman'
      run: brakeman --quiet --no-summary --no-pager
